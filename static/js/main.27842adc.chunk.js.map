{"version":3,"sources":["components/SearchList/SearchList.jsx","components/SearchBox/SearchBox.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchList","props","movieList","handleNominateClick","actionText","map","movie","index","className","Title","Year","id","onClick","SearchBox","value","onChange","event","setSearchValue","target","placeholder","Header","heading","App","useState","movies","setMovies","searchValue","nominateList","setNominateList","searchMovie","a","url","fetch","res","json","data","Search","useEffect","newMovieList","updatedMovieList","filter","nominate","imdbID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAsBeA,EApBI,SAACC,GAClB,IAAQC,EAA+CD,EAA/CC,UAAWC,EAAoCF,EAApCE,oBAAqBC,EAAeH,EAAfG,WAExC,OACE,mCACGF,GAAaA,EAAUG,KAAI,SAACC,EAAOC,GAAR,OAC1B,sBAAKC,UAAU,WAAf,UACE,6BAAKF,EAAMG,QACX,4BAAG,sCAASH,EAAMI,KAAf,SACH,wBAEEC,GAAIL,EAAMK,GACVC,QAAS,kBAAMT,EAAoBG,IAHrC,SAG8CF,GAFvCE,EAAMK,aCGRE,EAbG,SAACZ,GACjB,OACE,qBAAKO,UAAU,eAAf,SACE,uBACEA,UAAU,2BACVM,MAAOb,EAAMa,MACbC,SAAU,SAACC,GAAD,OAAWf,EAAMgB,eAAeD,EAAME,OAAOJ,QACvDK,YAAY,0BCCLC,EARA,SAACnB,GACd,OACE,8BACE,6BAAKA,EAAMoB,aC6FFC,G,YA3FH,WAEV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBT,EAApB,KACA,EAAwCM,mBAAS,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAEMC,EAAW,uCAAG,WAAOH,GAAP,mBAAAI,EAAA,6DAEZC,EAFY,qCAEwBL,EAFxB,6BAIAM,MAAMD,GAJN,cAIZE,EAJY,gBAKCA,EAAIC,OALL,QAKZC,EALY,QASTC,QACPX,EAAUU,EAAKC,QAVC,2CAAH,sDAcjBC,qBAAU,WACRR,EAAYH,KACX,CAACA,IA4BJ,OACE,sBAAKlB,UAAU,kBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,CAAQa,QAAQ,mBAElB,qBAAKb,UAAU,iBAAf,SACE,cAAC,EAAD,CAAWkB,YAAaA,EAAaT,eAAgBA,MAEvD,sBAAKT,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,gCACE,cAAC,EAAD,CAAQa,QAAQ,WAChB,8BACE,cAAC,EAAD,CACEnB,UAAWsB,EACXrB,oBA/BQ,SAACG,GACrB,IAAMgC,EAAY,sBAAOX,GAAP,CAAqBrB,IACjCiC,EAAmBf,EAAOgB,QAAO,SAACC,GAAD,OAAcA,EAASC,SAAWpC,EAAMoC,UAE/Ed,EAAgBU,GAChBb,EAAUc,IA2BEnC,WAAW,oBAKnB,qBAAKI,UAAU,QAGf,qBAAKA,UAAU,kBAAf,SACE,gCACE,cAAC,EAAD,CAAQa,QAAQ,cAChB,8BACE,cAAC,EAAD,CACEnB,UAAWyB,EACXxB,oBArCM,SAACG,GACnB,IAAMgC,EAAeX,EAAaa,QAAO,SAACC,GAAD,OAAcA,EAASC,SAAWpC,EAAMoC,UACjFd,EAAgBU,IAoCJlC,WAAW,0BC5EZuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.27842adc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchList = (props) => {\r\n  const { movieList, handleNominateClick, actionText } = props;\r\n  // console.log(\"SearchList\" + movieList);\r\n  return (\r\n    <>\r\n      {movieList && movieList.map((movie, index) => (\r\n        <div className=\"card p-3\">\r\n          <h6>{movie.Title}</h6>\r\n          <p><small>({movie.Year})</small></p>\r\n          <button\r\n            key={movie.id}\r\n            id={movie.id}\r\n            onClick={() => handleNominateClick(movie)}>{actionText}\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchList;","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <div className=\"col col-sm-5\">\r\n      <input\r\n        className=\"form-control text-center\"\r\n        value={props.value}\r\n        onChange={(event) => props.setSearchValue(event.target.value)}\r\n        placeholder=\"Search Movies Here\"\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>{props.heading}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useState, useEffect } from \"react\";\nimport SearchList from \"./components/SearchList/SearchList.jsx\";\nimport SearchBox from \"./components/SearchBox/SearchBox.jsx\";\nimport Header from \"./components/Header/Header.jsx\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n\n  const [movies, setMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [nominateList, setNominateList] = useState([]);\n\n  const searchMovie = async (searchValue) => {\n\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=8b285a19`;\n\n    const res = await fetch(url);\n    const data = await res.json();\n    // console.log(\"Data\" + data.Search);\n    // console.log(data.Search);\n\n    if (data.Search) {\n      setMovies(data.Search);\n    };\n  };\n\n  useEffect(() => {\n    searchMovie(searchValue);\n  }, [searchValue]);\n\n  // useEffect(() => {\n  //   const movieNominations = JSON.parse(localStorage.getItem(\"Movie Nominations\"));\n\n  //   setNominateList(movieNominations);\n  // }, []);\n\n  // const saveToLocalStorage = (items) => {\n  //   localStorage.setItem(\"Movie Nominations\", JSON.stringify(items));\n  // };\n\n  const nominateMovie = (movie) => {\n    const newMovieList = [...nominateList, movie]\n    const updatedMovieList = movies.filter((nominate) => nominate.imdbID !== movie.imdbID);\n    // console.log(\"MOVIE LIST\" + updatedMovieList);\n    setNominateList(newMovieList);\n    setMovies(updatedMovieList);\n    // saveToLocalStorage(newMovieList);\n  };\n\n  const removeMovie = (movie) => {\n    const newMovieList = nominateList.filter((nominate) => nominate.imdbID !== movie.imdbID);\n    setNominateList(newMovieList);\n    // setMovies([...movies, movie]);\n    // saveToLocalStorage(newMovieList);\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"m-3 text-center\">\n        <Header heading=\"Movie Search\" />\n      </div>\n      <div className=\"searchBar mb-5\">\n        <SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          <div>\n            <Header heading=\"Movies\" />\n            <div>\n              <SearchList\n                movieList={movies}\n                handleNominateClick={nominateMovie}\n                actionText=\"Nominate\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n\n        </div>\n        <div className=\"col text-center\">\n          <div>\n            <Header heading=\"Nominated\" />\n            <div>\n              <SearchList\n                movieList={nominateList}\n                handleNominateClick={removeMovie}\n                actionText=\"Remove\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}